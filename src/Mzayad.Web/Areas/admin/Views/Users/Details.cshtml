@using Humanizer
@using Mzayad.Core.Formatting
@using Mzayad.Web.Extensions
@using Mzayad.Web.Resources
@using OrangeJetpack.Base.Core.Formatting
@using DateTimeFormatter = Mzayad.Core.Formatting.DateTimeFormatter
@model Mzayad.Web.Areas.admin.Models.Users.DetailsViewModel

@{
    ViewBag.Title = "User Details - " + NameFormatter.GetFullName(Model.FirstName, Model.LastName);
}


<ul class="link-list">
    <li><a href="@Url.Action("Disable","Users", new {userId = Model.UserId})"><i class="fa fa-ban fa-pad-right"></i>Disable</a></li>
</ul>

<h2>Summary</h2>

<section class="form-section">

    <div class="form-group">
        @Html.Label("Name")
        <img src="@Model.AvatarUrl" alt="avatar" class="user-avatar" />
        <p class="form-control-static">
            @NameFormatter.GetFullName(Model.FirstName, Model.LastName)
        </p>
    </div>

    <div class="form-group">
        @Html.Label("User ID")
        <p class="form-control-static">
            @Model.UserId
        </p>
    </div>

    <div class="form-group">
        @Html.Label("Signed Up")
        <p class="form-control-static">
            @Model.CreatedUtc.Humanize()
            <small>(<time datetime="@Model.CreatedUtc.ToString("s")">@DateTimeFormatter.ToLocalTime(Model.CreatedUtc, DateTimeFormatter.Format.Full)</time>)</small>
        </p>
    </div>

    <div class="form-group">
        @Html.Label("Subscription") <small>@Html.ActionLink("Edit Subscription", "EditSubscription", "Users", new { id = Model.UserId }, null)</small>
        <p class="form-control-static">
            @Html.DisplayFor(m => m.SubscriptionUtc, "SubscriptionUtc")
        </p>
    </div>

</section>

<h2>Edit User</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section>

        <div class="form-group">
            @Html.LabelFor(i => i.FirstName, Global.FirstName).Required()
            @Html.TextBoxFor(i => i.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(i => i.FirstName, "Please enter a first name.")
        </div>

        <div class="form-group">
            @Html.LabelFor(i => i.LastName, Global.LastName).Required()
            @Html.TextBoxFor(i => i.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(i => i.LastName, "Please enter a last name.")
        </div>

        <div class="form-group">
            @Html.LabelFor(i => i.UserName, Global.UserName).Required()
            @Html.TextBoxFor(i => i.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(i => i.LastName, "Please enter a username.")
        </div>

        <div class="form-group">
            @Html.LabelFor(i => i.Email, Global.Email).Required()
            @Html.TextBoxFor(i => i.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(i => i.Email, "Please enter a valid email address.")
            <div class="bs-callout bs-callout-warning">
                <h4>Warning</h4>
                Changing a user's username or email address may disrupt his or her ability to sign into the site, please be very careful when changing.
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Roles")
            @Html.CheckBoxList("SelectedRoles", Model.Roles)
        </div>
    </section>

    <section class="form-buttons">
        <button type="submit" class="btn btn-default">Save</button>
    </section>
}

@if (Model.Trophies.Any())
{
    <h2>Trophies Achieved</h2>
    <table class="@Html.Css().GridTable">
        <thead>
            <tr>
                <th></th>
                <th>Name</th>
                <th>XP awarded</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trophy in Model.Trophies)
            {
                <tr>
                    <td class="text-center">
                        <img src="@trophy.Trophy.IconUrl" alt="@trophy.Trophy.Name" class="img-cell" />
                    </td>
                    <td>@trophy.Trophy.Name</td>
                    <td>@trophy.XpAwarded</td>
                    <td>@DateTimeFormatter.ToLocalTime(trophy.CreatedUtc, DateTimeFormatter.Format.Full)</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.Auctions.Any())
{
    <h2>Items Won</h2>
    <table class="@Html.Css().GridTable">
        <thead>
            <tr>
                <th></th>
                <th>Auction</th>
                <th>Date</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Auctions)
            {
                <tr>
                    <td class="image-cell">
                        <img class="img-responsive" src="@item.Product.MainImage().ImageSmUrl" alt="@item.Title"/>
                    </td>
                    <td>@item.Title</td>
                    <td>@DateTimeFormatter.ToLocalTime(item.ClosedUtc)</td>
                    <td>@CurrencyFormatter.Format(item.WonAmount)</td>
                </tr>
          }
        </tbody>
    </table>
}

@if (Model.Bids.Any())
{
    <h2>Bid History</h2>
    <table class="@Html.Css().GridTable">
        <thead>
            <tr>
                <th>Date\Time</th>
                <th>Auction</th>
                <th>Amount</th>
                <th>Time Left in Auction</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Bids)
            {
                <tr>
                    <td>@DateTimeFormatter.ToLocalTime(item.CreatedUtc, DateTimeFormatter.Format.Full)</td>
                    <td>@item.Auction.Title</td>
                    <td>@CurrencyFormatter.Format(item.Amount)</td>
                    <td>@TimeSpan.FromSeconds(item.SecondsLeft).Humanize(4)</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.SubscriptionLogs.Any())
{
    <h2>Subscription Log</h2>

    <table class="@Html.Css().GridTable">
        <thead>
            <tr>
                <th>Date/Time</th>
                <th>Original Subscription</th>
                <th>New Subscription</th>
                <th>Change</th>
                <th>Changed By</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in Model.SubscriptionLogs)
            {
                <tr>
                    <td>
                        @DateTimeFormatter.ToLocalTime(log.CreatedUtc, DateTimeFormatter.Format.Full)
                    </td>
                    <td>
                        @if (log.OriginalSubscriptionUtc.HasValue)
                    {
                            @DateTimeFormatter.ToLocalTime(log.OriginalSubscriptionUtc, DateTimeFormatter.Format.Full)
                        }
                    </td>
                    <td>
                        @DateTimeFormatter.ToLocalTime(log.ModifiedSubscriptionUtc, DateTimeFormatter.Format.Full)
                    </td>
                    <td>
                        @if (log.DaysAdded > 0)
                    {
                            <span class="text-success">+ @("day".ToQuantity(log.DaysAdded))</span>
                        }
                        else if (log.DaysAdded < 0)
                        {
                            <span class="text-warning">- @("day".ToQuantity(log.DaysAdded))</span>
                        }
                        else
                        {
                            <span>0 days</span>
                        }
                    </td>
                    <td>@NameFormatter.GetFullName(log.ModifiedByUser.FirstName, log.ModifiedByUser.LastName)</td>
                    <td>
                        @if (Model.UserId == log.ModifiedByUserId)
                        {
                            <span class="label label-default">PURCHASE</span>
                        }
                        else
                        {
                            <span class="label label-success">GIFT</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.TokenLogs.Any())
{
    <h2>Token Log</h2>

    <table class="@Html.Css().GridTable">
        <thead>
            <tr>
                <th>Date/Time</th>
                <th>Original Amount</th>
                <th>New Amount</th>
                <th>Change</th>
                <th>Changed By</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.TokenLogs)
            {
                <tr>
                    <td>
                        @DateTimeFormatter.ToLocalTime(item.CreatedUtc, DateTimeFormatter.Format.Full)
                    </td>
                    <td>
                        @string.Format("{0} tokens", item.OriginalTokenAmount)
                    </td>
                    <td>
                        @string.Format("{0} tokens", item.ModifiedTokenAmount)
                    </td>
                    <td>
                        @if (item.TokensAdded > 0)
                        {
                            <span class="text-success">+ @("token".ToQuantity(item.TokensAdded))</span>
                        }
                        else if (item.TokensAdded < 0)
                        {
                            <span class="text-warning">@("token".ToQuantity(item.TokensAdded))</span>
                        }
                        else
                        {
                            <span>0 days</span>
                        }
                    </td>
                    <td>@NameFormatter.GetFullName(item.ModifiedByUser.FirstName, item.ModifiedByUser.LastName)</td>
                </tr>
            }
        </tbody>
    </table>
}
