@using System.Globalization
@model DateTime?
@{
    var date = "";
    var dateTime = "";
    int? hour = null;
    int? minute = null;

    if (Model.HasValue)
    {
        date = Model.Value.ToString("dd/MM/yyyy");
        dateTime = Model.Value.ToString(CultureInfo.CurrentCulture);
        hour = Model.Value.Hour;
        minute = Model.Value.Minute;
    }
}

<div class="datetime-picker">
    <input type="hidden" class="datetime-value" name="@Html.NameForModel()" value="@dateTime" />
    <div class="input-group">
        <span class="input-group-addon">
            <i class="fa fa-fw fa-calendar"></i>
        </span>
        <input type="text" class="form-control date-picker" value="@date" />
    </div>
    <div class="input-group">
        <span class="input-group-addon">
            <i class="fa fa-fw fa-clock-o"></i>
        </span>
        <select class="hour-picker form-control" style="width: auto;">
            <option value=""></option>
            @for (var i = 0; i < 24; i++)
            {
                <option value="@i" selected="@(i == hour)">@i</option>
            }
        </select>
        <select class="minute-picker form-control" style="width: auto;">
            <option value=""></option>
            @for (var i = 0; i < 60; i += 15)
            {
                <option value="@i" selected="@(i == minute)">@i.ToString("00")</option>
            }
        </select>
    </div>
</div>