@using Mzayad.Core.Formatting
@using Mzayad.Models.Enum
@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@using OrangeJetpack.Base.Web
@model Mzayad.Web.Models.Home.IndexViewModel

@{
    ViewBag.Title = Global.Home;
}

<style>
    
    #page-title {
        display: none;
    }

    .mz-wrapper {
        width: 788px;
        margin: 0 auto;
    }
    
    .mz {
        float: left;
        height: 190px;
        background: transparent url(//az712326.vo.msecnd.net/assets/mz-freehand-635610878999247526.png) 0 0 no-repeat;
    }

    .mz-m {
        width: 173px;
    }

    .mz-z {
        width: 130px;
        background-position-x: -173px;
    }

    .mz-a1 {
        width: 106px;
        background-position-x: -303px;
    }

    .mz-y {
        width: 134px;
        background-position-x: -409px;
    }

    .mz-a2 {
        width: 109px;
        background-position-x: -543px;
    }

    .mz-d {
        width: 136px;
        background-position-x: -652px;
    }

</style>

<div class="jumbotron">
    @*<div class="mz-wrapper hidden-sm">
        <div class="mz mz-m wow fadeInDown" data-wow-delay="1s"></div>
        <div class="mz mz-z wow fadeInUp" data-wow-delay="1.5s"></div>
        <div class="mz mz-a1 wow fadeInDown" data-wow-delay="2s"></div>
        <div class="mz mz-y wow fadeInUp" data-wow-delay="2.5s"></div>
        <div class="mz mz-a2 wow fadeInDown" data-wow-delay="3s"></div>
        <div class="mz mz-d wow fadeInUp" data-wow-delay="3.5s"></div>
    </div>
    <div class="clearfix"></div>*@
</div>

<img src="//az712326.vo.msecnd.net/assets/mz-freehand-635610878999247526.png" style="display: none;" alt="" />

@if (!Model.Auctions.Any())
{
    @Html.StatusMessage("There are no auctions available at this time.", StatusMessageType.Warning)

    return;
}

<ul id="auction-list" class="list-unstyled" data-bind="foreach: auctions">
    <li class="auction">
        <div class="row">
            <div class="col-md-8 col-sm-6">
                <div class="auction-details">
                    <h2 class="auction-title" data-bind="text: title"></h2>
                    <div data-bind="template: { name: displayTemplate }"></div>
                </div>
            </div>
            <div class="col-md-4 col-sm-6 text-center">
                <a class="product-image" href="#"><img data-bind="attr: { src: images[0].imageMdUrl, alt: $parent.title }" alt=""></a>
                <ul class="product-images list-unstyled" data-bind="foreach: images">
                    <li data-bind="visible: $index() !== 0">
                        <a class="product-image" href="#"><img data-bind="attr: { src: imageSmUrl, alt: $parent.title }" alt=""></a>
                    </li>
                </ul>
            </div>
        </div>
    </li>
</ul>

<script type="text/html" id="closed-template">
    <div class="auction-status status-closed">
        <div class="auction-status-label">Closed</div>
        <div class="auction-status-details">...</div>
    </div>
</script>

<script type="text/html" id="live-template">
    <div class="auction-status status-live">
        <div class="auction-status-label">Live <i class="fa fa-bolt"></i></div>
        <div class="auction-status-loading" data-bind="visible: !isLoaded()">
            <i class="fa fa-spin fa-cog"></i>
            Loading...
        </div>
        <div class="auction-status-details" data-bind="visible: isLoaded()">
            <div class="auction-time-left" data-bind="text: timeLeftFormatted"></div>
            <div class="auction-last-bid" data-bind="text: lastBidFormatted"></div>
            <div class="auction-bid-actions">
                @if (Request.IsAuthenticated)
                {
                    <button type="button" class="btn btn-default" data-bind="click: submitBid">Bid</button>
                }
                else
                {
                    <a class="btn btn-default" href="@Url.Action("SignIn", "Account", new { ReturnUrl = "/"})">Bid</a>
                }
            </div>

        </div>
    </div>
</script>

<script type="text/html" id="upcoming-template">
    <div class="auction-status status-closed">
        <div class="auction-status-label" data-bind="text: title">Closed</div>
        <div class="auction-status-details">...</div>
    </div>
</script>

@*<ul id="auction-list" class="list-unstyled">
            @foreach (var auction in Model.Auctions)
            {
                <li class="auction" data-auction-id="@auction.AuctionId">
                    <div class="row">
                        <div class="col-md-8 col-sm-6">
                            <div class="auction-details">

                                <h2 class="auction-title">@auction.Title</h2>

                                @if (auction.Status == AuctionStatus.Closed)
                                {
                                    <div class="auction-status status-closed">
                                        <div class="auction-status-label">Closed</div>
                                        <div class="auction-status-details">...</div>
                                    </div>
                                }
                                else if (auction.IsLive())
                                {
                                    <div class="auction-status status-live">
                                        <div class="auction-status-label">Live <i class="fa fa-bolt"></i></div>
                                        <div class="auction-status-loading">
                                            <i class="fa fa-spin fa-cog"></i>
                                            Loading...
                                        </div>
                                        <div class="auction-status-details">

                                            <div class="auction-time-left"></div>
                                            <div class="auction-last-bid"></div>
                                            <div class="auction-bid-actions">
                                                @if (Request.IsAuthenticated)
                                                {
                                                    <button type="button" class="btn btn-default submit-bid">Bid</button>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-default" href="@Url.Action("SignIn", "Account", new { ReturnUrl = "/"})">Bid</a>
                                                }
                                            </div>

                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="auction-status status-upcoming">
                                        <div class="auction-status-label">Upcoming</div>
                                        <div class="auction-status-details">
                                            @DateTimeFormatter.ToLocalTime(auction.StartUtc, DateTimeFormatter.Format.Full)
                                        </div>
                                    </div>
                                }

                                @if (auction.Product.ProductSpecifications.Any())
                                {
                                    <ul class="auction-specs list-unstyled">
                                        @foreach (var specification in auction.Product.ProductSpecifications)
                                        {
                                            <li>@specification.Specification.Name: @specification.Value</li>
                                        }
                                    </ul>
                                }
                                <div class="auction-price">Retail price: @CurrencyFormatter.Format(auction.RetailPrice)</div>
                            </div>

                        </div>
                        <div class="col-md-4 col-sm-6 text-center">
                            <img class="img-responsive" src="@auction.Product.MainImage().ImageMdUrl" alt="@auction.Title">
                        </div>
                    </div>

                </li>
            }
        </ul>*@

    @section scripts {

        @Scripts.Render("~/js/knockout")
        @Scripts.Render("~/js/signalR")
        <script src="/signalr/hubs"></script>
        <script>

            $(function () {

                var Auction = function(data) {
                    var self = this;
                    self.auctionId = ko.observable(data.auctionId);
                    self.title = ko.observable(data.title);
                    self.status = ko.observable(data.status);
                    self.images = data.images;

                    self.isLoaded = ko.observable(false);
                    self.timeLeft = ko.observable();
                    self.lastBidAmount = ko.observable();
                    self.lastBidUser = ko.observable();

                    self.displayTemplate = function() {
                        switch (self.status()) {
                            case "Live":
                                return "live-template";
                            case "Upcoming":
                                return "upcoming-template";
                            case "Closed":
                                return "closed-template";
                            default:
                                throw "Invalid auction status.";
                        }
                    }
                    
                    self.timeLeftFormatted = ko.computed(function() {
                        return TimeUtilities.getTimeLeft(self.timeLeft());
                    });

                    self.lastBidFormatted = ko.computed(function() {
                        if (!self.lastBidUser()) {
                            return "";
                        }
                          
                        return "Last Bid: KD " + self.lastBidAmount() + " by " + self.lastBidUser();
                    });

                    self.submitBid = function() {
                        auctionHub.server.submitBid(self.auctionId());
                    };
                };

                var AuctionsViewModel = function(data) {
                    var self = this;
                    self.auctions = ko.observableArray([]);

                    self.getAuction = function(auctionId) {
                        for (var i = 0, len = self.auctions().length; i < len; i++) {
                            if (self.auctions()[i].auctionId() === auctionId)
                                return self.auctions()[i];
                        }
                        return null;
                    };

                    var mappedAuctions = $.map(data, function(auction) { return new Auction(auction); });
                    self.auctions(mappedAuctions);
                };

                var auctions = @Html.Raw(JsonConvert.SerializeObject(Model.Auctions, Formatting.None, new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() }));
                var viewModel = new AuctionsViewModel(auctions);
                
                ko.applyBindings(viewModel);

                


                var auctionIds = @JsonConvert.SerializeObject(Model.LiveAuctionIds);
                
                
                
                
                var auctionHub = $.connection.auctionHub;

                auctionHub.client.updateAuctions = function (results) {
                    console.log(results);
                    var auctionJson = $.parseJSON(results);
                    for (var i = 0, len = auctionJson.length; i < len; ++i) {
                        var auction = auctionJson[i];
                        var auctionDetail = viewModel.getAuction(auction.id);
                        if (auctionDetail) {
                            auctionDetail.timeLeft(auction.t);
                            auctionDetail.lastBidAmount(auction.a);
                            auctionDetail.lastBidUser(auction.u);
                            auctionDetail.isLoaded(true);
                        }
                    }
                };

                auctionHub.client.closeAuction = function(auctionId) {
                    // TODO: update UI on auction close
                    console.log("Closed auction: " + auctionId);
                }

                //$.connection.hub.logging = true;
                $.connection.hub.start().done(function() {
                    auctionHub.server.initAuctions(auctionIds).done(function (results) {
                        console.log(results);
                    });
                });

                //$("#clear-cache").on("click", function() {
                //    auctionHub.server.clearAuctions();
                //});



            });
        </script>
    }
