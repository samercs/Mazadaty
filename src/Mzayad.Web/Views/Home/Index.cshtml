@using Mzayad.Core.Formatting
@using Mzayad.Models.Enum
@using Newtonsoft.Json
@using OrangeJetpack.Base.Web
@model Mzayad.Web.Models.Home.IndexViewModel

@{
    ViewBag.Title = Global.Home;
}

<style>
    
    #page-title {
        display: none;
    }

    .mz-wrapper {
        width: 788px;
        margin: 0 auto;
    }
    
    .mz {
        float: left;
        height: 190px;
        background: transparent url(//az712326.vo.msecnd.net/assets/mz-freehand-635610878999247526.png) 0 0 no-repeat;
    }

    .mz-m {
        width: 173px;
    }

    .mz-z {
        width: 130px;
        background-position-x: -173px;
    }

    .mz-a1 {
        width: 106px;
        background-position-x: -303px;
    }

    .mz-y {
        width: 134px;
        background-position-x: -409px;
    }

    .mz-a2 {
        width: 109px;
        background-position-x: -543px;
    }

    .mz-d {
        width: 136px;
        background-position-x: -652px;
    }

</style>

<div class="jumbotron">
    @*<div class="mz-wrapper hidden-sm">
        <div class="mz mz-m wow fadeInDown" data-wow-delay="1s"></div>
        <div class="mz mz-z wow fadeInUp" data-wow-delay="1.5s"></div>
        <div class="mz mz-a1 wow fadeInDown" data-wow-delay="2s"></div>
        <div class="mz mz-y wow fadeInUp" data-wow-delay="2.5s"></div>
        <div class="mz mz-a2 wow fadeInDown" data-wow-delay="3s"></div>
        <div class="mz mz-d wow fadeInUp" data-wow-delay="3.5s"></div>
    </div>
    <div class="clearfix"></div>*@
</div>

<img src="//az712326.vo.msecnd.net/assets/mz-freehand-635610878999247526.png" style="display: none;" alt="" />

@if (!Model.Auctions.Any())
{
    @Html.StatusMessage("There are no auctions available at this time.", StatusMessageType.Warning)

    return;
}

@*<ul id="auction-list" class="list-unstyled">
    @foreach (var auction in Model.Auctions)
    {
        <li class="auction" data-auction-id="@auction.AuctionId">
            <div class="row">
                <div class="col-md-8 col-sm-6">
                    <div class="auction-details">

                        <h2 class="auction-title">@auction.Title</h2>

                        @if (auction.Status == AuctionStatus.Closed)
                        {
                            <div class="auction-status status-closed">
                                <div class="auction-status-label">Closed</div>
                                <div class="auction-status-details">...</div>
                            </div>
                        }
                        else if (auction.IsLive())
                        {
                            <div class="auction-status status-live">
                                <div class="auction-status-label">Live <i class="fa fa-bolt"></i></div>
                                <div class="auction-status-loading">
                                    <i class="fa fa-spin fa-cog"></i>
                                    Loading...
                                </div>
                                <div class="auction-status-details">

                                    <div class="auction-time-left"></div>
                                    <div class="auction-last-bid"></div>
                                    <div class="auction-bid-actions">
                                        @if (Request.IsAuthenticated)
                                        {
                                            <button type="button" class="btn btn-default submit-bid">Bid</button>
                                        }
                                        else
                                        {
                                            <a class="btn btn-default" href="@Url.Action("SignIn", "Account", new { ReturnUrl = "/"})">Bid</a>
                                        }
                                    </div>
                                    
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="auction-status status-upcoming">
                                <div class="auction-status-label">Upcoming</div>
                                <div class="auction-status-details">
                                    @DateTimeFormatter.ToLocalTime(auction.StartUtc, DateTimeFormatter.Format.Full)
                                </div>
                            </div>
                        }

                        @if (auction.Product.ProductSpecifications.Any())
                        {
                            <ul class="auction-specs list-unstyled">
                                @foreach (var specification in auction.Product.ProductSpecifications)
                                {
                                    <li>@specification.Specification.Name: @specification.Value</li>
                                }
                            </ul>
                        }
                        <div class="auction-price">Retail price: @CurrencyFormatter.Format(auction.RetailPrice)</div>
                    </div>

                </div>
                <div class="col-md-4 col-sm-6 text-center">
                    <img class="img-responsive" src="@auction.Product.MainImage().ImageMdUrl" alt="@auction.Title">
                </div>
            </div>

        </li>
    }
</ul>*@

@section scripts {
    
    @Scripts.Render("~/js/knockout")
    @Scripts.Render("~/js/signalR")
    <script src="/signalr/hubs"></script>
    <script>
        
        var TimeUtilities = {
            getDays: function(days) {
                return days === 1 ? "1 day " : days + " days ";
            },
            getHours: function(hours) {
                return hours === 1 ? "1 hour " : hours + " hours ";
            },
            getMinutes: function(minutes) {
                return minutes === 1 ? "1 minute " : minutes + " minutes ";
            },
            getSeconds: function(seconds) {
                return seconds === 1 ? "1 second " : seconds + " seconds ";
            },
            getTimeLeft: function(seconds) {

                var self = this;
                var minutes = Math.floor(seconds/60);
                var hours = Math.floor(minutes/60);
                var days = Math.floor(hours/24);

                hours = hours-(days*24);
                minutes = minutes-(days*24*60)-(hours*60);
                seconds = seconds-(days*24*60*60)-(hours*60*60)-(minutes*60);

                var label = "Time Left: ";

                if (days > 0) {
                    return label + self.getDays(days) + self.getHours(hours) + self.getMinutes(minutes) + self.getSeconds(seconds);
                } else if (hours > 0) {
                    return label + self.getHours(hours) + self.getMinutes(minutes) + self.getSeconds(seconds);
                } else if (minutes > 0) {
                    return label + self.getMinutes(minutes) + self.getSeconds(seconds);
                } else {
                    return label + self.getSeconds(seconds);
                }
            }
        }
            
        $(function () {

            function Auction(auctionId, title) {
                var self = this;
                self.auctionId = ko.observable(auctionId);
                self.title = ko.observable(title);
            }

            function AuctionsViewModel(auctions) {
                var self = this;
                self.updateAuctions = ko.observableArray(auctions);
            }

            var auctions = @Html.Raw(JsonConvert.SerializeObject(Model.Auctions, Formatting.Indented));


            return;


                @*var auctionIds = //@JsonConvert.SerializeObject(Model.Auctions.Where(i => i.Status != AuctionStatus.Closed).Select(i => i.AuctionId));
                var auctionHub = $.connection.auctionHub;

                var auctionDetails = [];
                
                $(".auction").each(function() {
                    var $this = $(this);
                    auctionDetails.push({
                        auctionId: $this.data("auctionId"),
                        timeLeft: $this.find(".auction-time-left"),
                        lastBid: $this.find(".auction-last-bid"),
                        loading: $this.find(".auction-status-loading"),
                        details: $this.find(".auction-status-details"),
                    });
                });

                auctionHub.client.updateAuctions = function (results) {
                    console.log(results);
                    var auctions = $.parseJSON(results);
                    for (var i = 0, len = auctions.length; i < len; ++i) {
                        var auction = auctions[i];
                        var auctionDetail = getAuctionDetail(auction.id);
                        if (auctionDetail) {

                            var timeLeft = auction.t;
                            var bidAmount = auction.a;
                            var bidUser = auction.u;
                            
                            auctionDetail.timeLeft.text(TimeUtilities.getTimeLeft(timeLeft));
                            if (bidAmount) {
                                auctionDetail.lastBid.text("Last Bid: KD " + bidAmount + " by " + bidUser);
                            }
                            
                            auctionDetail.loading.hide();
                            auctionDetail.details.show();
                        }
                    }
                };

                auctionHub.client.closeAuction = function(auctionId) {
                    // TODO: update UI on auction close
                    console.log("Closed auction: " + auctionId);
                }

                var getAuctionDetail = function(auctionId) {
                    for (var i = 0, len = auctionDetails.length; i < len; i++) {
                        if (auctionDetails[i].auctionId === auctionId)
                            return auctionDetails[i];
                    }
                    return null;
                };

                //$.connection.hub.logging = true;
                $.connection.hub.start().done(function() {
                    auctionHub.server.initAuctions(auctionIds).done(function (results) {
                        console.log(results);
                    });
                });

                $("#clear-cache").on("click", function() {
                    auctionHub.server.clearAuctions();
                });

                $(".submit-bid").on("click", function() {
                    var $this = $(this);
                    var parent = $this.closest(".auction");
                    var auctionId = parent.data("auctionId");

                    var auctionDetail = getAuctionDetail(auctionId);
                    if (auctionDetail) {
                        auctionDetail.details.hide();
                        auctionDetail.loading.show();
                    }

                    auctionHub.server.submitBid(auctionId);
                });*@

            });
    </script>

}