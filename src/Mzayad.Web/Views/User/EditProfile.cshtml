@model Mzayad.Web.Models.User.EditProfileModel

@{
    ViewBag.Title = Global.EditProfile;

}

<div class="row">
    <div class="@Html.Css().FormWide">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <section>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Status, Global.Privacy)
                    <br />
                    @foreach (var item in Model.PrivacyList)
                    {
                        @Html.RadioButtonFor(i => i.UserProfile.Status, item.Value, new { }) @Html.Raw(item.Text) <br />
                    }
                    @Html.ValidationMessageFor(m => m.UserProfile.Status, Global.FirstNameRequiredErrorMessage)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.Gamertag, Global.AliasOrUsername).Required()
                    @Html.TextBoxFor(i => i.UserProfile.Gamertag, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserProfile.Gamertag, Global.FirstNameRequiredErrorMessage)
                    <div id="username-validate" class="text-right">
                        <div id="username-checking" class="text-warning">
                            <i class="fa fa-spin fa-cog fa-lg"></i> @Global.UserNameValidateChecking
                        </div>
                        <div id="username-valid" class="text-success">
                            <i class="fa fa-lg fa-check-square-o"></i> @Global.UserNameValidateIsValid
                        </div>
                        <div id="username-error" class="text-danger">
                            <i class="fa fa-lg fa-frown-o"></i> @Global.UserNameValidateError
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.ProfileUrl, Global.ProfileURL)
                    @Html.TextBoxFor(i => i.UserProfile.ProfileUrl, new { @class = "form-control disabled", @readonly = true })
                    @Html.ValidationMessageFor(m => m.UserProfile.ProfileUrl, Global.FirstNameRequiredErrorMessage)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.UserProfile.AvatarId, Global.Avatar)
                    <div class="row">
                        @foreach (var item in Model.Avatars)
                        {
                            if (!Model.UserProfile.AvatarId.HasValue && Model.Avatars.First() == item)
                            {
                                <div class="col-md-3" style="margin-bottom: 30px;">
                                    <img data-id="@item.AvatarId" src="@item.Url" alt="@item.Url" class="img-thumbnail img-responsive normalImg selectedImg" />
                                </div>
                            }
                            else if (Model.UserProfile.AvatarId.HasValue && Model.UserProfile.AvatarId == item.AvatarId)
                            {
                                <div class="col-md-3" style="margin-bottom: 30px;">
                                    <img data-id="@item.AvatarId" src="@item.Url" alt="@item.Url" class="img-thumbnail img-responsive normalImg selectedImg" />
                                </div>
                            }
                            else
                            {
                                <div class="col-md-3" style="margin-bottom: 30px;">
                                    <img data-id="@item.AvatarId" src="@item.Url" title="@Global.ClickToSelect" alt="@item.Url" class="img-thumbnail img-responsive normalImg" />
                                </div>
                            }

                        }
                        <input type="hidden" name="selectedAvatar" id="selectedAvatar" />
                        @Html.HiddenFor(i=>i.UserProfile.UserId)
                        @Html.HiddenFor(i => i.UserProfile.UserProfileId)
                    </div>
                </div>

            </section>



            <section class="form-buttons">
                <button id="btnSubmit" type="submit" class="btn btn-default">@Global.Save</button>
            </section>
        }
    </div>
</div>

@section styles
{
    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/themes/smoothness/jquery-ui.css" />
    
    
    <style>
        .selectedImg {
            border: solid 2px #000000;
            padding: 5px;
        }

        .normalImg {
            cursor: pointer;
        }

        #username-validate {
            display: none;
            margin: 8px 0;
            line-height: normal;
        }

        #username-checking {
            font-style: italic;
        }
    </style>



}

@section Scripts {
    @Scripts.Render("~/js/jquery-ui")
    @Scripts.Render("~/js/validate")
    @Scripts.Render("~/js/slugify")
    <script src="~/scripts/address.js"></script>
    <script>
        (function($) {

            $(".normalImg").click(function() {

                var $this = $(this);
                var id = $this.attr("data-id");
                $("#selectedAvatar").val(id);
                $(".normalImg").removeClass("selectedImg");
                $this.addClass("selectedImg");

            });


            $("#UserProfile_Gamertag").on("blur", function() {

                var gamertag = $(this).val();
                if (gamertag.length === 0) {
                    return;
                }

                $("#username-validate").show().children("div").hide();
                $("#username-checking").show();

                var url = "@Url.Action("ValidateGamertag")";
                var data = { gamertag: gamertag, cureent: "@Model.UserProfile.Gamertag" };

                $.getJSON(url, data, function(d) {
                    $("#username-checking").hide();
                    if (d.IsValid) {
                        $("#username-valid").show();
                        $("#btnSubmit").removeAttr("disabled");

                    } else {
                        $("#username-error").show();
                        $("#btnSubmit").attr("disabled", "disabled");

                    }
                });

            });


            $("#UserProfile_ProfileUrl").slugify("#UserProfile_Gamertag");


            var pigLatin = function (str) {
                return "https://www.mzayad.com/profiles/" + str;
            }

            $("#UserProfile_ProfileUrl").slugify("#UserProfile_Gamertag",false, {
                slugFunc: function (str, originalFunc) { return pigLatin(originalFunc(str)); }
            }
            );


        })(jQuery);


    </script>
}
